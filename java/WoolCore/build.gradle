plugins {
	id 'java'
	id 'java-library'
	id 'distribution'
	id 'eclipse-wtp'
	id 'maven-publish'
	id 'signing'
}

group = 'nl.rrd'
version = '1.0.0'
sourceCompatibility = 1.8
targetCompatibility = 1.8
archivesBaseName = 'wool-core'

repositories {
    jcenter()
}

dependencies {
    // Use JUnit test framework
	api "org.slf4j:slf4j-api:1.7.25"
	api "com.fasterxml.jackson.core:jackson-annotations:2.9.7"
	api "com.fasterxml.jackson.core:jackson-core:2.9.7"
	api "com.fasterxml.jackson.core:jackson-databind:2.9.7"
	api "joda-time:joda-time:2.10.5"
    testImplementation 'junit:junit:4.12'
}

jar {
	manifest {
		attributes 'Main-Class': 'nl.rrd.wool.parser.WoolParser'
		attributes 'Class-Path': configurations.compileClasspath.collect({ it.name }).join(' ')
	}
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

distributions {
	main {
		distributionBaseName = archivesBaseName
		contents {
			from configurations.compileClasspath
			from jar
		}
	}
}

[distZip, distTar, installDist]*.dependsOn jar

javadoc {
	options {
		links 'https://docs.oracle.com/javase/10/docs/api/'
		addStringOption('Xdoclint:all,-html', '-quiet')
	}
}

artifacts {
	archives javadocJar, sourcesJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
			
			pom {
				name = 'WOOL Dialogue Framework'
				description = 'WOOL is a simple, powerful dialogue framework for creating virtual agent conversations.'
				url = 'https://www.council-of-coaches.eu/wool/'
				
				licenses {
					license {
						name = 'MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				
				developers {
					developer {
						id = 'bvanschooten'
						name = 'Boris van Schooten'
						email = 'b.vanschooten@rrd.nl'
					}
					developer {
						id = 'dhofs'
						name = 'Dennis Hofs'
						email = 'd.hofs@rrd.nl'
					}
					developer {
						id = 'hopdenakker'
						name = 'Harm op den Akker'
						email = 'h.opdenakker@rrd.nl'
					}
					developer {
						id = 'tbeinema'
						name = 'Tessa Beinema'
						email = 't.beinema@rrd.nl'
					}					
				}
				
				scm {
					connection = 'scm:git:git://github.com/RoessinghResearch/wool.git'
					developerConnection = 'scm:git:ssh://github.com:RoessinghResearch/wool.git'
					url = 'https://github.com/RoessinghResearch/wool/tree/master'
				}
			}
		}
	}
	repositories {
		maven {
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username ossrhUsername
				password ossrhPassword
			}
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}
